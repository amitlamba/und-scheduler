buildscript {
    ext {
        kotlinVersion = '1.2.20'
        springBootVersion = '2.0.0.RC1'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/libs-milestone-local" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        //classpath 'org.springframework:springloaded:1.2.8.RELEASE'
        classpath 'org.springframework:springloaded:1.2.8.RELEASE'
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'findbugs'
apply plugin: 'eclipse'
apply plugin: 'idea'

group = 'com.und'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        //freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        //freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}


repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.spring.io/libs-snapshot' }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    jcenter()
}



jacocoTestReport {
    reports {
        xml.enabled
        csv.enabled
        html.destination file("${buildDir}/reports/jacoco.Html")
    }
}
tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
        reportLevel = "low"
        ignoreFailures = true
        html.destination file("${buildDir}/reports/findBugs.Html")
    }
}

ext {
    springCloudVersion = 'Finchley.M6'
}

jar {
    group = 'com.und'
    baseName = 'und-scheduler'
    version = '0.2.1'
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.cloud:spring-cloud-config-client')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    compile('org.springframework.cloud:spring-cloud-starter-openfeign')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('org.flywaydb:flyway-core:5.0.7')
    //compile("org.springframework.boot:spring-boot-starter-mobile:2.0.0.M5")
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile('org.springframework.boot:spring-boot-starter-quartz')
    //compile('org.springframework.boot:spring-boot-starter-security')
    //compile('org.springframework.boot:spring-boot-starter-mail')
    //compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    //compile group: 'org.springframework', name: 'spring-context', version: '5.0.3.RELEASE'
    //compile group: 'org.springframework', name: 'spring-context-support', version: '5.0.3.RELEASE'
    //compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.0'
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.9.4.1'
    compile('org.springframework.cloud:spring-cloud-starter-stream-kafka')
    compile group: 'org.scala-saddle', name: 'google-rfc-2445', version: '20110304'
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('org.postgresql:postgresql')
    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude(module: 'commons-logging')
    }
    //testCompile('org.springframework.security:spring-security-test')
    testCompile group: 'com.nhaarman', name: 'mockito-kotlin', version: '1.5.0'
    testCompile 'org.mockito:mockito-core:1.+'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

